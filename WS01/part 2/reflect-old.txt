///////////////////////////////////////////////////////////////////////////
                              Reflection
                          Workshop - #1 (P2)
Full Name  : Sheng-Lin Yang
Student ID#: 160443222
Email      : syang153myseneca.ca
Section    : NDD

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

In this workshop, at the beginning, I had no idea how to solve the problem about
#ifndef SENECA_FOODORDER_H
    #error "The header guard for 'FoodOrder.h' doesn't follow the convention!"
#endif
I commented this at the beginning but I thought it should not be commented.
Therefore, I checked the name after #ifndef
because I typed SENECA_FOOD_ORDER_H at the beginning.
I made it with no error just because I wanted to make both name are the same,
then this problem that I solved.

The second point was about external linkage, I tried to make g_taxrate and g_dailydiscount with no error.
At the beginning, I changed them as seneca::g_taxrate and seneca::g_dailydiscount.
I saw them with no error, and happy about the result.
However, I uploaded to matrix, and showed me the error for these two variables.
Then I just realized I had to make them as external linkage.
I made them well in FoodOrder.h file,
but I was still seeing the error on matrix.
Declaration two variables in FoodOrder.cpp file,
then ran the program on matrix,
and saw there was no error anymore.

From part 1 to part 2,
I got memory leak many times until I switched is.getline() to std::getline(),
but after I changed and had no idea how to make the std::getline() right.
Then I checked the instruction from VScode,
and I also checked cplusplus.com,
and searched online.
During the period, I just realized in the instruction of workshop 1
that I had to use std::getline, std::string::c_str, and std::string::length
but I did not know how to use these three functions.
Until I checked cplusplus.com and I mimicked the code from the website,
so I made a std::string and used the string for std::getline(),
then allocated the memory by std::string::length(),
after that I used string copy by using std::string::c_str.
Because of using length() to get length for string, not using strlen().
The reason why I used length() based on two reasons,
first one for the instruction required to do.
second one for strlen() is for char* or char [], and length() is for string,
then c_str() to copy from string to char* for avoiding the type difference.

Another problem I had.
That was about STATIC int count = 1 and count++.
If I did not use STATIC when declaring,
then count++ would not make the sequence increment by one,
and would always be one.
However, if int count = 1 coded with count++
and the sequence would increase by one.
This problem was if without STATIC the compiler would not know where is the count from,
but if with STATIC the compiler would know where is the count from.